name: ❖ Infra - Apply

on:
  workflow_call:
    inputs:
      environment:
        description: 'the environment to deploy to'
        type: string
        default: 'wl-staging'
      environment_url:
        description: 'the URL of the environment'
        type: string
        default: https://keyserver.walletconnect.com/health
      version:
        description: 'The ECR tag to deploy e.g. 1.7.0'
        type: string
    secrets:
      TF_API_TOKEN:
        required: true

jobs:
  apply-infra:
    name: Apply Infra `${{ inputs.environment }}`
    runs-on:
      group: ${{ vars.RUN_GROUP }}
    environment:
      name: infra/${{ inputs.environment }}
      url: ${{ inputs.environment_url }}
    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      TF_WORKSPACE: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get Grafana details
        id: grafana-get-details
        uses: WalletConnect/actions/aws/grafana/get-details/@2.1.2

      - name: Get Grafana key
        id: grafana-get-key
        uses: WalletConnect/actions/aws/grafana/get-key/@2.1.2
        with:
          key-prefix: ${{ github.event.repository.name }}
          workspace-id: ${{ steps.grafana-get-details.outputs.workspace-id }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Cache Terraform data
        uses: actions/cache@v3
        with:
          path: ${{ vars.TF_DIRECTORY }}/.terraform
          key: terraform-${{ hashFiles('${{ vars.TF_DIRECTORY }}/.terraform.lock.hcl') }}

      - name: Init Terraform
        uses: WalletConnect/actions/terraform/init/@2.1.2
        with:
          environment: ${{ inputs.environment }}
          use-tfvars: false

      - name: Configure Terraform Variables
        id: configure-tfvars
        working-directory: ${{ vars.TF_DIRECTORY }}
        run: |
          echo 'grafana_auth="${{ steps.grafana-get-key.outputs.key }}"' >> plan.auto.tfvars
          echo 'image_version="${{ inputs.version }}"' >> plan.auto.tfvars

      - name: Apply on ${{ inputs.environment }}
        id: tf-plan-apply
        working-directory: ${{ vars.TF_DIRECTORY }}
        run: |
          terraform apply -auto-approve -no-color

      - name: Delete Grafana key
        id: grafana-delete-key
        if: ${{ always() }}
        uses: WalletConnect/actions/aws/grafana/delete-key/@2.1.2
        with:
          key-name: ${{ steps.grafana-get-key.outputs.key-name }}
          workspace-id: ${{ steps.grafana-get-details.outputs.workspace-id }}
