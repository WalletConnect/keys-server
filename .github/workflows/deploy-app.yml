name: deploy-app

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'the environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - prod
          - staging
          - dev
      region:
        description: 'the region to deploy to'
        required: true
        type: string
        default: 'eu-central-1'
      environment_url:
        description: 'the URL of the environment'
        required: true
        type: string
        default: https://keys.walletconnect.com/health
  workflow_call:
    inputs:
      image_name:
        description: 'the name of the image to deploy'
        required: true
        type: string
        default: 'keyserver'
      version:
        description: 'the release version'
        required: true
        type: string
      environment:
        description: 'the environment to deploy to'
        required: true
        type: string
        default: 'staging'
      environment_url:
        description: 'the URL of the environment'
        required: true
        type: string
        default: https://keys.walletconnect.com/health

env:
  AWS_REGION: "eu-central-1"

jobs:
  deploy-app:
    runs-on: ubuntu-latest
    environment:
      name: app/${{ inputs.environment }}
      url: ${{ inputs.environment_url }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - id: deploy
        uses: WalletConnect/actions/actions/deploy-ecs/@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          cluster-name: ${{ inputs.environment }}_${{ inputs.image_name }}_cluster
          service-name: ${{ inputs.environment }}_${{ inputs.image_name }}-service
          task-definition-name: ${{ inputs.environment }}_${{ inputs.image_name }}
          image-name: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image_name }}:${{ inputs.version }}
