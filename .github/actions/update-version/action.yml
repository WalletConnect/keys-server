name: Update Version
description: "Update the release version in the repository"

inputs:
  token:
    description: 'A Github PAT'
    required: true

outputs:
  version:
    description: The release version
    value: ${{ steps.clean_version.outputs.version }}

runs:
  using: composite

  steps:
    - name: Cocogitto Release
      id: release
      uses: cocogitto/cocogitto-action@v3
      with:
        check: true
        check-latest-tag-only: true
        release: true
        git-user: 'github-actions[bot]'
        git-user-email: "github-actions[bot]@users.noreply.github.com"

    - name: Update version in Cargo.toml
      shell: bash
      run: |
        version=$(echo "${{ steps.release.outputs.version }}" | sed 's/v//g')
        sed "s/^version = \".*\"\$/version = \"$version\"/" ./Cargo.toml > /tmp/cargo.toml
        mv /tmp/cargo.toml ./Cargo.toml

    - name: Commit version bump
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "chore: Bump version for release"
        file_pattern: "Cargo.toml Cargo.lock"
        commit_user_name: "github-actions[bot]"
        commit_user_email: "github-actions[bot]@users.noreply.github.com"

    - name: Install Rust
      uses: WalletConnect/actions-rs/toolchain@1.0.0
      with:
        toolchain: stable
        profile: minimal
        default: true

    - name: Cache cargo registry
      uses: Swatinem/rust-cache@v2

    - name: Generate Changelog
      shell: bash
      run: cog changelog --at ${{ steps.release.outputs.version }} -t full_hash > GITHUB_CHANGELOG.md

    - name: Update GitHub release notes
      uses: softprops/action-gh-release@v1
      with:
        body_path: GITHUB_CHANGELOG.md
        tag_name: ${{ steps.release.outputs.version }}
        token: ${{ inputs.token }}

    - name: Clean Version
      id: clean_version
      shell: bash
      run: |
        version=$(echo "${{ steps.release.outputs.version }}" | sed 's/v//g')
        echo "version=$version" >> $GITHUB_OUTPUT
